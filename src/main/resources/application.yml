spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: tourism
  datasource:
    driver-class-name: org.postgresql.Driver

    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: ${DB_URL}
    hikari:
      maximum-pool-size: 10 # MAX number of connection in the pool
      max-lifetime: 600000 # 10m
      idle-timeout: 300000 # 5m
      connection-timeout: 30000 # 30s
      validation-timeout: 5000 # 5s
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: ${MONGODB_DATABASE}

  jpa:
    open-in-view: true
    show-sql: false # Temp not view SQL Hibernate
    properties:
      hibernate:
        transaction:
          jta:
            platform: org.hibernate.transaction.JDBCTransactionFactory
        dialect: org.hibernate.dialect.PostgreSQLDialect
        enable_lazy_load_no_trans: true
        format_sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  ai:
    openai:
      chat:
        base-url: https://generativelanguage.googleapis.com
        completions-path:  /v1beta/openai/chat/completions
        options:
          model: gemini-2.0-flash
      api-key: ${GOOGLE_API_KEY}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid,profile,email
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            scope: public_profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/facebook"
        provider:
            google:
              authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
              token-uri: https://oauth2.googleapis.com/token
              user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
              user-name-attribute: sub
            facebook:
                authorization-uri: https://www.facebook.com/v19.0/dialog/oauth
                token-uri: https://graph.facebook.com/v19.0/oauth/access_token
                user-info-uri: https://graph.facebook.com/me?fields=id,name,email,picture.width(200).height(200)
                user-name-attribute: id

endpoints:
  connect-timeout: 100000
  read-timeout: 100000

secret-key: ${SECRET_KEY}
expired-time: 86400000


server:
  servlet:
    context-path: /v1
  port: ${SERVER_PORT:8080}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs

logging:
  level:
    org:
      springframework:
        jdbc:
          core:
            JdbcTemplate: INFO
      hibernate:
        SQL: INFO
frontend:
  base-url: ${FRONTEND_BASE_URL}
backend:
  base-url: ${BACKEND_BASE_URL}

serpapi:
  api:
    key: ${SERPAPI_KEY}